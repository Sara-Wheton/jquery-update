if (!jQuery.easing.easeInQuad) {
  jQuery.extend(jQuery.easing, {
    easeInQuad: function (e, f, a, h, g) {
      return h * (f /= g) * f + a;
    },
    easeOutQuad: function (e, f, a, h, g) {
      return -h * (f /= g) * (f - 2) + a;
    },
    easeInOutQuad: function (e, f, a, h, g) {
      if ((f /= g / 2) < 1) {
        return (h / 2) * f * f + a;
      }
      return (-h / 2) * (--f * (f - 2) - 1) + a;
    },
    easeInCubic: function (e, f, a, h, g) {
      return h * (f /= g) * f * f + a;
    },
    easeOutCubic: function (e, f, a, h, g) {
      return h * ((f = f / g - 1) * f * f + 1) + a;
    },
    easeInOutCubic: function (e, f, a, h, g) {
      if ((f /= g / 2) < 1) {
        return (h / 2) * f * f * f + a;
      }
      return (h / 2) * ((f -= 2) * f * f + 2) + a;
    },
    easeInOutQuint: function (e, f, a, h, g) {
      if ((f /= g / 2) < 1) {
        return (h / 2) * f * f * f * f * f + a;
      }
      return (h / 2) * ((f -= 2) * f * f * f * f + 2) + a;
    },
    easeInExpo: function (e, f, a, h, g) {
      return f === 0 ? a : h * Math.pow(2, 10 * (f / g - 1)) + a;
    },
    easeOutExpo: function (e, f, a, h, g) {
      return f == g ? a + h : h * (-Math.pow(2, (-10 * f) / g) + 1) + a;
    },
    easeInOutExpo: function (e, f, a, h, g) {
      if (f === 0) {
        return a;
      }
      if (f == g) {
        return a + h;
      }
      if ((f /= g / 2) < 1) {
        return (h / 2) * Math.pow(2, 10 * (f - 1)) + a;
      }
      return (h / 2) * (-Math.pow(2, -10 * --f) + 2) + a;
    },
    easeInElastic: function (f, h, e, l, k) {
      var i = 1.70158;
      var j = 0;
      var g = l;
      if (h === 0) {
        return e;
      }
      if ((h /= k) == 1) {
        return e + l;
      }
      if (!j) {
        j = k * 0.3;
      }
      if (g < Math.abs(l)) {
        g = l;
        i = j / 4;
      } else {
        i = (j / (2 * Math.PI)) * Math.asin(l / g);
      }
      return (
        -(
          g *
          Math.pow(2, 10 * (h -= 1)) *
          Math.sin(((h * k - i) * (2 * Math.PI)) / j)
        ) + e
      );
    },
    easeOutElastic: function (f, h, e, l, k) {
      var i = 1.70158;
      var j = 0;
      var g = l;
      if (h === 0) {
        return e;
      }
      if ((h /= k) == 1) {
        return e + l;
      }
      if (!j) {
        j = k * 0.3;
      }
      if (g < Math.abs(l)) {
        g = l;
        i = j / 4;
      } else {
        i = (j / (2 * Math.PI)) * Math.asin(l / g);
      }
      return (
        g * Math.pow(2, -10 * h) * Math.sin(((h * k - i) * (2 * Math.PI)) / j) +
        l +
        e
      );
    },
    easeInOutElastic: function (f, h, e, l, k) {
      var i = 1.70158;
      var j = 0;
      var g = l;
      if (h === 0) {
        return e;
      }
      if ((h /= k / 2) == 2) {
        return e + l;
      }
      if (!j) {
        j = k * (0.3 * 1.5);
      }
      if (g < Math.abs(l)) {
        g = l;
        i = j / 4;
      } else {
        i = (j / (2 * Math.PI)) * Math.asin(l / g);
      }
      if (h < 1) {
        return (
          -0.5 *
            (g *
              Math.pow(2, 10 * (h -= 1)) *
              Math.sin(((h * k - i) * (2 * Math.PI)) / j)) +
          e
        );
      }
      return (
        g *
          Math.pow(2, -10 * (h -= 1)) *
          Math.sin(((h * k - i) * (2 * Math.PI)) / j) *
          0.5 +
        l +
        e
      );
    },
    easeInBack: function (e, f, a, i, h, g) {
      if (g === undefined) {
        g = 1.70158;
      }
      return i * (f /= h) * f * ((g + 1) * f - g) + a;
    },
    easeOutBack: function (e, f, a, i, h, g) {
      if (g === undefined) {
        g = 1.70158;
      }
      return i * ((f = f / h - 1) * f * ((g + 1) * f + g) + 1) + a;
    },
    easeInOutBack: function (e, f, a, i, h, g) {
      if (g === undefined) {
        g = 1.70158;
      }
      if ((f /= h / 2) < 1) {
        return (i / 2) * (f * f * (((g *= 1.525) + 1) * f - g)) + a;
      }
      return (i / 2) * ((f -= 2) * f * (((g *= 1.525) + 1) * f + g) + 2) + a;
    },
    easeInBounce: function (e, f, a, h, g) {
      return h - jQuery.easing.easeOutBounce(e, g - f, 0, h, g) + a;
    },
    easeOutBounce: function (e, f, a, h, g) {
      if ((f /= g) < 1 / 2.75) {
        return h * (7.5625 * f * f) + a;
      } else {
        if (f < 2 / 2.75) {
          return h * (7.5625 * (f -= 1.5 / 2.75) * f + 0.75) + a;
        } else {
          if (f < 2.5 / 2.75) {
            return h * (7.5625 * (f -= 2.25 / 2.75) * f + 0.9375) + a;
          } else {
            return h * (7.5625 * (f -= 2.625 / 2.75) * f + 0.984375) + a;
          }
        }
      }
    },
    easeInOutBounce: function (e, f, a, h, g) {
      if (f < g / 2) {
        return jQuery.easing.easeInBounce(e, f * 2, 0, h, g) * 0.5 + a;
      }
      return (
        jQuery.easing.easeOutBounce(e, f * 2 - g, 0, h, g) * 0.5 + h * 0.5 + a
      );
    },
  });
}
(function (c) {
  c.pixelentity = c.pixelentity || { version: "1.0.0" };
  if (c.pixelentity.ticker) {
    return;
  }
  var h = [];
  var d = 0;
  function a() {
    return new Date().getTime();
  }
  var i, g, b;
  var f =
    window.requestAnimationFrame ||
    window.webkitRequestAnimationFrame ||
    window.mozRequestAnimationFrame ||
    window.oRequestAnimationFrame ||
    window.msRequestAnimationFrame ||
    false;
  function e() {
    var m, l;
    if (d > 0) {
      m = a();
      for (var k in h) {
        l = h[k];
        if (m - l.last >= l.each) {
          l.callback(l.last, m);
          l.last = m;
        }
      }
      if (f) {
        f(e);
      }
    }
  }
  var j = (c.pixelentity.ticker = {
    register: function (l, k) {
      d++;
      k = typeof k == "undefined" ? 33 : k;
      if (k > 0) {
        k = parseInt(1000 / k, 10);
      } else {
        if (c.browser.mozilla) {
          k = parseInt(1000 / 50, 10);
        }
      }
      h.push({ callback: l, last: a(), each: k });
      if (d == 1) {
        if (f) {
          f(e);
        } else {
          i = setInterval(e, 16);
          g = setInterval(e, 20);
          b = setInterval(e, 30);
        }
      }
    },
    unregister: function (l) {
      for (var k in h) {
        if (h[k].callback == l) {
          delete h[k];
          d--;
        }
      }
      if (d <= 0) {
        clearInterval(i);
        clearInterval(g);
        clearInterval(b);
      }
    },
  });
})(jQuery);
(function (c) {
  c.pixelentity = c.pixelentity || { version: "1.0.0" };
  if (c.pixelentity.preloader) {
    return;
  }
  function a(h) {
    var g = c(h.currentTarget);
    var f = g.data("peUtilsLoader");
    if (--f.total <= 0) {
      var d = f.callback;
      var i = f.target;
      g.removeData("peUtilsLoader");
      g.unbind("load error", a);
      d(i);
    }
  }
  var b = (c.pixelentity.preloader = {
    load: function (e, i) {
      e = e instanceof jQuery ? e : c(e);
      var g =
        e[0].tagName.toLowerCase() == "img" ? [e[0]] : e.find("img").get();
      var h;
      var f = [];
      while ((h = g.shift())) {
        if (!(h.src && h.complete)) {
          f.push(h);
        }
      }
      if (f.length > 0) {
        var d = { target: e, callback: i, total: f.length };
        while ((h = f.shift())) {
          h = c(h);
          h.data("peUtilsLoader", d).one("load error", a);
          if (h.attr("data-src")) {
            h.attr("src", h.attr("data-src"));
            h.removeAttr("data-src");
          }
        }
      } else {
        i(e);
      }
    },
  });
})(jQuery);
(function (c) {
  c.pixelentity = c.pixelentity || { version: "1.0.0" };
  c.pixelentity.hilight = {
    conf: {
      width: 0,
      height: 0,
      transition: "vertbars",
      duration: 1500,
      elements: 30,
      maxSize: 250,
      minSize: 50,
      slideshow: false,
      images: [],
      links: [],
      linkTarget: false,
      delay: 3000,
      boost: 0,
      over: false,
      fallback: false,
    },
  };
  var d = [
    "float",
    "display",
    "margin-top",
    "margin-right",
    "margin-bottom",
    "margin-left",
    "position",
    "top",
    "left",
  ];
  var b = ["vertbars", "circles", "horizbars", "squares"];
  function a(ae, U) {
    var p = this;
    var f = c(this);
    var t = false;
    var O;
    var R, Z;
    var A, af;
    var D, H, l, y, L;
    var B, V;
    var s,
      P,
      F,
      v,
      ah = 0,
      W = 0;
    var ag = false;
    var x = false;
    var ab = true;
    var Y,
      ad = 0,
      ai = 1;
    var S;
    var Q = false,
      g = false,
      I = true;
    var aa = 0;
    function G() {
      R = U.width;
      Z = U.height;
      ab = true;
      Y = U.images;
      U.boost = Math.min(1, parseFloat(U.boost));
      c.pixelentity.preloader.load(ae, z);
    }
    function z() {
      R = R || ae.width();
      Z = Z || ae.height();
      if (ae[0].tagName.toLowerCase() == "img") {
        A = ae;
      } else {
        A = ae.find("img:eq(0)");
      }
      O = c("<span>").width(R).height(Z);
      var h = d.length;
      while (h--) {
        O.css(d[h], ae.css(d[h]));
      }
      ae.css({
        position: "relative",
        float: "none",
        margin: 0,
        top: 0,
        left: 0,
      });
      ae.wrap(O);
      O = ae.parent();
      if (U.slideshow) {
        if (Y.length === 0 && ae.attr("data-destination")) {
          Y = ae.attr("data-destination").split("|");
        }
        if (Y.length > 0) {
          if (!U.over) {
            ad = setInterval(J, Math.max(U.duration + 200, U.delay));
          }
        } else {
          U.slideshow = false;
        }
      }
      var n = false;
      if (!(U.slideshow || U.over)) {
        n = r();
      }
      ab = false;
      if (n) {
        ac(n);
      } else {
        setTimeout(j, 50);
        if (x) {
          x();
        }
        if (U.over) {
          O.bind("mouseenter mouseleave", m);
        }
      }
    }
    function r() {
      return U.destination || ae.attr("data-destination");
    }
    function j() {
      f.triggerHandler("ready.pixelentity");
    }
    function ac(h) {
      if (!h || A == af) {
        return;
      }
      ab = true;
      if (typeof h == "string") {
        af = c("<img>").attr("src", h);
      } else {
        af = h;
      }
      c.pixelentity.preloader.load(af, e);
    }
    function e(h) {
      ab = false;
      af = h[0];
      X();
      E();
    }
    function X() {
      if (t) {
        if (ag) {
          M();
        }
        return;
      }
      t = true;
      // if (
      //   U.fallback ||
      //   (c.browser.mozilla && c.browser.version.substr(0, 1) == "0")
      // ) {
      //   M();
      // } else {
        D = document.createElement("canvas");
        if (D.getContext) {
          k();
        } else {
          M();
        }
      // }
    }
    function k() {
      o();
      H = document.createElement("canvas");
      H.width = R;
      H.height = Z;
      l = document.createElement("canvas");
      l.width = R;
      l.height = Z;
      y = document.createElement("canvas");
      y.width = R;
      y.height = Z;
      L = document.createElement("canvas");
      L.width = R;
      L.height = Z;
      D = D.getContext("2d");
      H = H.getContext("2d");
      y = y.getContext("2d");
      L = L.getContext("2d");
      B = [];
      V = parseInt(U.elements, 10);
      var w = parseInt(U.minSize, 10);
      var h = parseInt(U.maxSize, 10) - w;
      for (var n = 0; n < V; n++) {
        B.push({
          x: Math.round(Math.random() * R),
          y: Math.round(Math.random() * Z),
          d: Math.round(Math.random() * F),
          r: Math.round(Math.random() * h + w),
        });
      }
    }
    function M() {
      ag = true;
      D = af;
      o();
    }
    function o() {
      D.width = R;
      D.height = Z;
      s = s || ae.offset();
      O.prepend(D);
      c(D)
        .css("position", "absolute")
        .css("z-index", (parseInt(ae.css("z-index"), 10) || 0) + 1)
        .offset(s)
        .show();
      F = parseInt(U.duration, 10);
      v = Math.round((1 * F) / 3);
    }
    function E() {
      ah = c.now();
      W = 0;
      c.pixelentity.ticker.unregister(N);
      c.pixelentity.ticker.register(N);
      P = U.transition;
      if (P == "random") {
        P = b[Math.round(Math.random() * b.length)];
      } else {
        if (P == "all") {
          P = b[aa++ % b.length];
        }
      }
      if (A instanceof jQuery) {
        if (!ag) {
          A.hide();
        }
        A = A[0];
      }
      if (!ag) {
        L.drawImage(A, 0, 0);
        y.drawImage(af, 0, 0);
      }
      N();
    }
    function C() {
      var w = 0;
      D.globalCompositeOperation = H.globalCompositeOperation = "source-over";
      H.clearRect(0, 0, R, Z);
      H.fillStyle = "rgb(255,255,255)";
      H.lineWidth = 1;
      if (W > v) {
        w = jQuery.easing.easeOutQuad(0, W - v, 0, 1, F - v);
        H.fillStyle = "rgba(255,255,255," + w + ")";
        H.fillRect(0, 0, R, Z);
        D.clearRect(0, 0, R, Z);
        D.globalAlpha = 1 - w;
        D.drawImage(L.canvas, 0, 0);
      } else {
        D.globalAlpha = 1;
        D.drawImage(L.canvas, 0, 0);
      }
      var h, am, al, n;
      var ak = Math.PI * 2;
      var aj;
      for (i = 0; i < V; i++) {
        aj = B[i];
        if (W > aj.d) {
          w = jQuery.easing.easeOutQuad(0, W - aj.d, 0, 1, F - aj.d);
          if (w >= 1) {
            continue;
          }
          H.fillStyle = "rgba(255,255,255," + w / 2 + ")";
          H.strokeStyle = "rgba(255,255,255," + w + ")";
          switch (P) {
            case "circles":
              H.beginPath();
              H.arc(aj.x, aj.y, Math.round(aj.r * w), 0, ak, false);
              H.fill();
              H.stroke();
              break;
            case "squares":
              al = Math.round(aj.r * w);
              h = aj.x - al;
              am = aj.y - al;
              n = al << 1;
              H.fillRect(h, am, n, n);
              H.strokeRect(h - 0.5, am - 0.5, n, n);
              break;
            case "vertbars":
              al = Math.round(aj.r * w);
              h = aj.x - al;
              n = al << 1;
              H.fillRect(h, 0, n, Z);
              H.beginPath();
              H.moveTo(h + 0.5, 0);
              H.lineTo(h + 0.5, Z);
              H.moveTo(h + n + 0.5, 0);
              H.lineTo(h + n + 0.5, Z);
              H.stroke();
              break;
            case "horizbars":
              al = Math.round(aj.r * w);
              am = aj.x - al;
              n = al << 1;
              H.fillRect(0, am, R, n);
              H.beginPath();
              H.moveTo(0, am + 0.5);
              H.lineTo(R, am + 0.5);
              H.moveTo(0, am + n + 0.5);
              H.lineTo(R, am + n + 0.5);
              H.stroke();
              break;
          }
        }
      }
      if (U.boost > 0) {
        w = jQuery.easing.easeOutQuad(0, W - v, 0, 1, F - v);
        D.globalCompositeOperation = "lighter";
        D.globalAlpha = U.boost * (1 - w);
        D.drawImage(H.canvas, 0, 0);
      }
      H.globalCompositeOperation = "source-atop";
      H.globalAlpha = 1;
      H.drawImage(y.canvas, 0, 0);
      D.globalCompositeOperation = "lighter";
      D.globalAlpha = 1;
      D.drawImage(H.canvas, 0, 0);
    }
    function q() {
      ratio = jQuery.easing.easeOutQuad(0, W, 0, 1, F);
      c(D).css("opacity", ratio);
    }
    function N() {
      var w;
      W = c.now() - ah;
      if (W > F) {
        W = F;
      }
      if (ag) {
        q();
      } else {
        C();
      }
      if (W == F) {
        c.pixelentity.ticker.unregister(N);
        T();
        if (U.slideshow) {
          var h = (ai - 1) % Y.length;
          var n = { idx: h };
          ae.triggerHandler("change.pixelentity", n);
          f.triggerHandler("change.pixelentity", n);
          if (U.links && U.linkTarget) {
            U.linkTarget.attr("href", U.links[h]);
          }
        }
      }
    }
    function T() {
      var h;
      if (ag) {
        h = c(A).attr("style");
        c(af).attr("style", h).show();
        c(A).replaceWith(af[0]);
      }
      h = A;
      A = af;
      af = h;
      ah = 0;
      if (x) {
        x();
        x = false;
      }
    }
    function K() {
      g = !g;
      ac(af);
    }
    function u(h) {
      if (ab || ah !== 0) {
        x = h;
      } else {
        h();
      }
    }
    function J() {
      u(function () {
        ac(Y[ai++ % Y.length]);
      });
    }
    function m(h) {
      if (U.slideshow) {
        if (h.type == "mouseenter") {
          if (!ad) {
            J();
            ad = setInterval(J, Math.max(U.duration + 200, U.delay));
          }
        } else {
          clearInterval(ad);
          ad = 0;
          ai = 0;
          J();
        }
      } else {
        if (!I) {
          Q = h.type == "mouseenter";
          if (Q != g) {
            u(K);
          }
        } else {
          Q = true;
          I = false;
          g = true;
          ac(r());
        }
      }
    }
    c.extend(p, {
      bind: function (n, h) {
        f.bind(n, h);
      },
      load: function (h) {
        u(function () {
          ac(h);
        });
      },
      reverse: function () {
        u(K);
      },
      destroy: function () {
        clearInterval(ad);
        c.pixelentity.ticker.unregister(N);
        if (U.over) {
          O.unbind("mouseenter mouseleave", m);
        }
        if (f) {
          f.remove();
        }
        if (D) {
          c(D).remove();
        }
        f = p = undefined;
        ae.data("peTransitionHilight", null);
        ae = undefined;
      },
    });
    G();
  }
  c.fn.peTransitionHilight = function (e) {
    var f = this.data("peTransitionHilight");
    if (f) {
      return f;
    }
    e = c.extend(true, {}, c.pixelentity.hilight.conf, e);
    this.each(function () {
      f = new a(c(this), e);
      c(this).data("peTransitionHilight", f);
    });
    return e.api ? f : this;
  };
})(jQuery);
